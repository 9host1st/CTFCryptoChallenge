
# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_75000325607193724293694446403116223058337764961074929316352803137087536131383 = Integer(75000325607193724293694446403116223058337764961074929316352803137087536131383); _sage_const_16 = Integer(16); _sage_const_3708354049649318175189820619077599798890688075815858391284996256924308912935262733471980964003143534200740113874286537588889431819703343015872364443921848 = Integer(3708354049649318175189820619077599798890688075815858391284996256924308912935262733471980964003143534200740113874286537588889431819703343015872364443921848); _sage_const_69376057129404174647351914434400429820318738947745593069596264646867332546443 = Integer(69376057129404174647351914434400429820318738947745593069596264646867332546443)
from Crypto.Util.number import long_to_bytes as l2b
c = _sage_const_3708354049649318175189820619077599798890688075815858391284996256924308912935262733471980964003143534200740113874286537588889431819703343015872364443921848 
e = _sage_const_16 
p = _sage_const_75000325607193724293694446403116223058337764961074929316352803137087536131383 
q = _sage_const_69376057129404174647351914434400429820318738947745593069596264646867332546443 
F = PolynomialRing(GF(p), names=('x',)); (x,) = F._first_ngens(1)
R = PolynomialRing(GF(q), names=('y',)); (y,) = R._first_ngens(1)
f = x**e - c
r = y**e - c
x1 = (f.roots()[_sage_const_0 ][_sage_const_0 ])
x2 = (r.roots()[_sage_const_1 ][_sage_const_0 ])
x1 = int(x1)
x2 = int(x2)
ans = crt(x1, x2, p, q)
print(l2b(ans))

